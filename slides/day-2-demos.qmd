---
title: "Orientation-Dependent Homogeneous Dislocation Nucleation in HCP Zr"
author: "Dr K V Mani Krishna"
date: 2025-07-07
format:
  revealjs:
    slide-number: true
  beamer:
    includes-in-header: preamble.tex
  pptx: default
---

## Orientation-Dependent Homogeneous Dislocation Nucleation in HCP Zr — Case-Study & Advanced LAMMPS Scripting Demo

## Orientation-Sensitive deformation in HCP Metals

- Homogeneous dislocation nucleation in **hexagonal close-packed (HCP)** metals is highly **orientation-sensitive**.
- Reason: **Activation stresses** vary significantly among available slip systems:
  - $\{10\bar{1}0\}\langle11\bar{2}0\rangle$ (basal)
  - $\{10\bar{1}1\}_{\text{pyr}}\langle11\bar{2}3\rangle$ (pyramidal)
  - etc.
- Loading direction strongly affects which slip systems activate.
- Zr, Mg etc. are common HCP materials of Engg Importance where this is of importance.

---

## What This Demo Reproduces

- A published **molecular dynamics (MD)** study on single-crystal **zirconium (Zr)**. [View my full PhD thesis here](http://www.hbni.ac.in/phdthesis/engg/ENGG01200904017.pdf))
- Part of the study investigates orientation dependence of slip under:
  - **Uniaxial tension**
  - **Uniaxial compression**
- Quantitative analysis of:
  - Stress–strain behavior
  - Defect nucleation and evolution


---

## Slide Deck Flow

- Overview of **scientific context**
- Summary of **key results**
  - Directly from thesis (figures or placeholders shown)
- Breakdown of **LAMMPS scripting strategy**
  - Use of variables and `loop` logic
  - Toggle between **debug** and **production** modes
  - Output


---

## Workflow Structure

1. **Equilibration Phase**
   - Build crystals at multiple orientations
   - Relax structures
   - Save one dump file per orientation

2. **Deformation Phase**
   - Load the equilibrated dumps
   - For each orientation:
     - Apply 3 loading directions × 2 senses = **6 deformation runs**
     - Collect: Stress–strain data
     - Analyze Dislocation statistics (via DXA or CNA)

---

## Scientific Motivation

* Polycrystalline HCP components exhibit anisotropic yield and twinning behaviour; designing texture therefore requires orientation-resolved data.  
* Atomistic simulations can access the critical stress for *homogeneous* dislocation nucleation, complementing in-situ nano-deformation experiments.  
* Zirconium is chosen for its technological relevance (nuclear cladding) and well-validated EAM/FS potential.

---

## Problem Statement

> **Goal:** Determine how the crystallographic loading axis influences the critical resolved shear stress (CRSS) and the nucleation pathway in Zr single crystals under high-strain-rate uniaxial loading ($10^{10}$ s$^{-1}$).

**Example Orientation considered**


Each orientation is tested in **tension** and **compression**, capturing asymmetry due to c/a ratio.

---

## Method Overview (Thesis Excerpt)

> *Insert Figure 1 from thesis:* stress–strain curves for all six cases, highlighting different yield points.  
> *Placeholder:* `![Stress–strain placeholder](fig1_stress_strain.png)`

Key observations:

* CRSS varies by ~30 % between axes.  
* Compression along [0001] activates $10\bar{1}1$ extension twinning whereas tension nucleates $10\bar{1}2$ twins.


---

## Microstructural Snapshots

> *Insert Figure 2:* atomic CNA colour-mapping just after nucleation under [0001] compression.  
> `![CNA snapshot placeholder](fig2_cna.png)`

---

## Summary of Scientific Insights

1. Loading along the c-axis demands the highest CRSS in tension but the **lowest** in compression due to twinning.  
2. Non-basal prismatic slip dominates for a-axis loading.  
3. Orientation-dependent nucleation stresses align with Schmid-factor predictions when twinning is considered.

---

## Workflow Decomposition

| Phase | Script | Main Tasks | Output |
|-------|--------|-----------|--------|
| **Equilibration** | `in.equilibration` | * Build oriented cell<br>* Minimise → NPT anneal → cool<br>* Dump `*_dump_equilibrium.data` | One dump per orientation |
| **Deformation** | `in.deformation` | * Loop over modes & axes<br>* Apply NPT + `fix deform`<br>* Record thermo, per-atom CNA<br>* Write custom dumps every 500 fs | 6 runs per orientation |

This separation avoids repeating 15 000‑step thermalisation before every deformation run—**6× speed‑up** for large orientation suites.

---

## Key Variable Definitions (Equilibration)

```lammps
# lattice & potential
variable        a      equal 3.23
variable        c_over_a equal 1.59
lattice         hcp ${a} orient x 1 0 0 orient y 0 1 0 orient z 0 0 1
atom_style      atomic
pair_style      eam/fs
pair_coeff      * * Zr.eam.fs Zr

# temperature & timestep
variable        Tinit  equal 300
variable        timestep equal 0.001
timestep ${timestep}
```

*Orientation rotation matrices* are supplied via the data files generated by a separate Python builder.

---

## Equilibration Loop Logic

```lammps
variable orient index 1 2 3 4 5 6 7 ...
label loop_orient

read_data   ${orient}_draft.data
minimise    1e-25 1e-25 5000 10000
fix         npt all npt temp ${Tinit} ${Tinit} 0.1 iso 0 0 1.0
run         15000

write_data  ${orient}_dump_equilibrium.data
shell       mv ${orient}_dump_equilibrium.data Ori_${orient}/

next orient
jump SELF loop_orient
```

A **debug toggle** (`variable MODE`) short‑circuits the run to 100 steps for smoke‑testing.

---

## Reading Equilibrated Dumps (Deformation Script)

```lammps
variable start_file_number equal 1
variable dataset  index 1 2 3 4 5 6 7 10 11 ...

label loop_dataset
variable c equal ${dataset}+${start_file_number}-1
read_data ${c}_dir_dump_equi.data
...
```

Folders `Ori_${c}`, `tensile_${c}`, `compression_${c}` are created on‑the‑fly for clean book‑keeping.

---

## Nested Loops: Loading Axis & Mode

```lammps
# outer loop over deformation axes
variable dir loop 3   # 1:X 2:Y 3:Z
label loop_dir

# inner loop over mode (1=tension, 2=compression)
variable mode loop 2
label loop_mode

# sign of strain rate
variable srate  equal ${mode}==1 ? v_srate_global : -v_srate_global

# choose NPT barostat axes
if "${dir}==1" then "fix 1 all npt ... y 0 0 1 z 0 0 1"
...
run ${TOTAL_RUNS}

next mode
jump SELF loop_mode
next dir
jump SELF loop_dir
```

A single **driver file** produces all six simulations with coherent filenames.

---

## Debug vs Production Modes

```lammps
variable MODE equal 0   # 1 = quick test

if "${MODE}==1" then & 
  "variable TOTAL_RUNS equal 50" &
  "variable DUMPS_FREQ_RUN equal 10" &
else &
  "variable TOTAL_RUNS equal 15000" &
  "variable DUMPS_FREQ_RUN equal 500"
```

Running in debug finishes in seconds—vital when editing loops or file paths.

---

## Output & Post-Processing Strategy

* **Thermo**: custom line every 500 fs → CSV via `logplot.py`.  
* **Per‑atom**: CNA (`compute cna/atom`) + coordinates every 0.5 ps.  
* **Defect statistics**: `fix print` writes strain & stress (`-pxx/10000`) to text files for direct plotting.  
* After each axis/mode block, `shell cp` moves dumps into `tensile_*` / `compression_*` folders, and a clean‑up script prunes stray files.

---

## Performance Notes

* `neighbor 2.0 bin` and `neigh_modify delay 1` minimise rebuild overhead at high strain rates.  
* I/O scales with processor count because each rank writes only one frame per interval.

Benchmarks on 4 × Intel Gold 6140 nodes show ≈ 3.5 ns/day for 100 000 atoms (six‑run batch).

---

## Recap & Take‑Home Messages

* Splitting equilibration and deformation cuts wall‑time by **>80 %** when many load cases are needed.  
* Nested loops make large parametric studies **concise and reproducible**.  
* A debug mode plus disciplined file naming turns a complex orientation study into a *manageable* teaching example.

*(Additional case studies—twin nucleation under shear, defect‑aided fracture, etc.—can be inserted after this slide.)*
